/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 4

&lt { quick_tap_ms = <220>; };

&mt { quick_tap_ms = <220>; };

/ {
    combos {
        compatible = "zmk,combos";

        Mainbootloaderleft {
            bindings = <&bootloader>;
            key-positions = <0 4>;
            timeout-ms = <20>;
        };

        Mainbootloaderright {
            bindings = <&bootloader>;
            key-positions = <7 11>;
            timeout-ms = <20>;
        };

        switch_to_en {
            bindings = <&switch_to_en>;
            key-positions = <3 4>;
            timeout-ms = <50>;
        };

        switch_to_ru {
            bindings = <&switch_to_ru>;
            key-positions = <7 8>;
            timeout-ms = <50>;
        };
    };

    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };

        switch_to_en: switch_to_en {
            label = "ZM_switch_to_en";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT>,
                <&macro_tap>,
                <&kp N1>,
                <&macro_release>,
                <&kp LCTRL &kp LALT>;
        };

        switch_to_ru: switch_to_ru {
            label = "ZM_switch_to_ru";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LCTRL &kp LALT>,
                <&macro_tap>,
                <&kp N2>,
                <&macro_release>,
                <&kp LCTRL &kp LALT>;
        };
    };
};

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 8 9 20 21 6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38>;
        };

        lp: lp {
            compatible = "zmk,behavior-hold-tap";
            label = "LONG_PRESS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LWIN RBKT    &kp Q                &kp W            &kp E              &kp R            &kp T          &kp Y        &kp U             &kp I               &kp O             &kp P                    &mt RWIN LBKT
&mt LCTRL GRAVE  &hml LEFT_CONTROL A  &hml LEFT_ALT S  &hml LEFT_SHIFT D  &hml LEFT_GUI F  &kp G          &kp H        &hmr RIGHT_GUI J  &hmr RIGHT_SHIFT K  &hmr RIGHT_ALT L  &hmr RIGHT_CONTROL SEMI  &mt RCTRL SQT
&mt LALT BSLH    &kp Z                &lp X LG(X)      &lp C LG(C)        &lp V LG(V)      &kp B          &kp N        &kp M             &kp COMMA           &kp DOT           &kp FSLH                 &mt RALT MINUS
                                                       &lt RSE TAB        &mt LSHFT SPACE  &lt LWR RET    &lt LWR ESC  &mt RSHFT BSPC    &lt RSE DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LWIN CAPS    &kp KP_MULTIPLY  &kp N7  &kp N8       &kp N9  &kp PLUS     &kp EXCL       &kp AT    &kp HASH     &kp DLLR  &kp PRCNT  &mt RWIN F1
&mt LCTRL K_APP  &kp KP_SLASH     &kp N4  &kp N5       &kp N6  &kp MINUS    &kp CARET      &kp AMPS  &kp STAR     &kp LPAR  &kp RPAR   &mt RCTRL F2
&mt LALT EQUAL   &kp N0           &kp N1  &kp N2       &kp N3  &numdot      &kp LG(SPACE)  &kp F4    &kp F5       &kp F6    &kp F7     &mt RALT F3
                                          &lt ADJ TAB  &trans  &trans       &trans         &trans    &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LWIN   &kp C_VOL_UP  &kp PG_UP  &kp C_PP       &kp HOME  &kp C_PAUSE    &kp N0       &kp HOME  &kp C_PP  &kp PG_UP  &kp C_VOL_UP  &kp RWIN
&kp LCTRL  &kp C_VOL_DN  &kp LEFT   &kp UP         &kp DOWN  &kp RIGHT      &kp LEFT     &kp DOWN  &kp UP    &kp RIGHT  &kp C_VOL_DN  &kp RCTRL
&kp LALT   &kp C_MUTE    &kp PG_DN  &kp LG(LS(S))  &kp END   &kp C_PLAY     &kp N0       &kp END   &grtsgn   &kp PG_DN  &kp C_MUTE    &kp RALT
                                    &trans         &trans    &lt ADJ RET    &lt ADJ ESC  &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &sys_reset    &out OUT_TOG  &none         &none         &none           &none         &none         &none         &out OUT_TOG  &sys_reset    &bootloader
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0  &bt BT_CLR
&none        &kp KP_NUM    &none         &none         &none         &none           &none         &none         &none         &none         &none         &none
                                         &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };
    };
};
